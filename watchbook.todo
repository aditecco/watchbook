
WatchBook.todo
==============

Inbox:
  https://firebase.googleblog.com/2014/04/best-practices-arrays-in-firebase.html
  - handle auth errors
  - expose interface for config objects
  - move INIT_USER to auth?
  - wrap layout comp in context consumer (?)

Fixes:
  - …
  - React does not recognize the `data-toggleTarget` prop on a DOM element.
  - 'Can't perform a React state update on an unmounted component'
    handleAuth	@	Auth.jsx:88
  - new item notif is not centered

Optims/refactor:
  - …
  - use redux
  - redesign card w/ background-image
  - actually implement Typescript
  - refactor to extract components where due
    - …
    - Create navbar comp
      keep profile & settings buttons visible in profile & settings pages
  - create DataProvider
    - …
  - remove signup test data
    firebase won't accept empty values

Features/stories:
  - …
  - [CARDS] decide what card controls should do when cards are in watched list
  - [CARDS] create card back
  - [WATCHED] add reset button to filter field
  - add ESC key listener for search cancel button
  - save API key to DB
  - show loader when user is authenticating
  - create validators for input fields
  - add user name to login notif
  - add user config options to profile page
  - Add signout notif
  - add skeleton loader for card backs
  - add lazy loading for card posters
  - sync local data to DB when performing CRUD operations
    - update
    - delete

UX:
  - Add a spinner for loading states

Platform:
  - …
  - try auto-deploy w/ Netlify
  - handle automatic deploy
  - handle deploy config
  - create DB rules

Tests:
  - …
  - try Jest
  - try visual testing w/ StoryBook
  - write e2e tests

Feature ideas:
  - Gamification
  - content collections
  - detect duplicate items

Archive:
  ✔ [TO-WATCH] implement to-watch feature @done(20-03-29 17:14) @project(Features/stories)
  ✔ search field in HP hides on scroll @done(20-03-29 17:15) @project(Features/stories)
  ✔ auth page flashes when logged-in & reloading @done(20-03-28 18:33) @project(Fixes)
    when the logged-in user is not detected, every private page will redirect to /, so <Auth />; then, when the user is detected, the component will redirect to /home. This is also the reason why (see next task)…
  ✔ Visiting any page via URL when logged-in will flash the auth page and redirect to home @done(20-03-28 18:33) @project(Fixes)
  ✔ implement new data structure @done(20-03-29 17:24) @project(Optims/refactor)
  ✔ redesign DB @done(20-03-26 01:16) @project(Optims/refactor)
    // data structure
    {
    content: {
    '0a777869-b9ec-48ab-ac28-ea05f4042255': {
    (...data)
    }
    },
    users: {
    id_1: {
    watched: {
    '0a777869-b9ec-48ab-ac28-ea05f4042255': true,
    },
    toWatch: {},
    }
    },
    settings: {
    id_1: {apiKey: '',}
    },
    }
  ✔ Close modal after adding item @done(20-03-23 00:04) @project(Fixes)
  ✔ fine-tune card front design @done(20-03-23 00:25) @project(Optims/refactor)
  ✔ [CARDS] implement card flip animations @done(20-03-22 20:13) @project(Features/stories)
    https://www.react-spring.io/
  ✔ [CARDS] create flippable card w/ rich info on the back @done(20-03-22 20:13) @project(Features/stories)
  ✔ [PROFILE] make fields controlled inputs @done(20-03-22 15:37) @project(Features/stories)
  ✔ [WATCHED] sort years in sort by year @done(20-03-22 01:35) @project(Features/stories)
  ✔ write all styles @done(20-03-22 01:24) @project(Features/stories)
  ✔ [PROFILE] control isInputEnabled at a field level @done(20-03-21 22:59) @project(Features/stories)
  ✔ Auth page @done(20-03-21 19:41) @project(Features/stories)
  ✔ [PROFILE] make fields disabled, then editable @done(20-03-21 19:41) @project(Features/stories)
  ✔ settings page @done(20-03-19 00:40) @project(Features/stories)
  ✔ Profile page @done(20-03-19 00:40) @project(Features/stories)
  ✔ restyle cards @done(20-03-11 00:39) @project(Features/stories)
  ✔ link to home in logo @done(20-03-09 00:48) @project(Features/stories)
  ✔ restyle cards -- part 1 @done(20-03-09 00:49) @project(Features/stories)
  ✔ [WATCHED] create hide filters button @done(20-03-08 03:57) @project(Features/stories)
  ✔ create component out of search field @done(20-03-07 19:21) @project(Inbox)
  ✔ Add modal to App, initialState @done(20-03-06 01:31) @project(Inbox)
  ✔ create cancel button for HP search @done(20-03-05 01:11) @project(Inbox)
  ✔ 1st draft @done(20-03-04 01:04) @project(Inbox)
  ✔ implement basic data fetching in HP @done(20-03-04 01:04) @project(Inbox)
  ✔ finish sort by year @done(20-03-03 01:27) @project(Inbox)
  ✔ fix compact view toggle @done(20-03-03 00:34) @project(Fixes)
  ✔ fix watched filter @done(20-03-02 01:23) @project(Fixes)
  ✔ add catchAll page @done(20-03-02 00:23) @project(Inbox)
  ✔ create @done(20-02-28 01:12) @project(Inbox)
  ✔ read @done @project(Inbox)
  ✔ reset search field after a search @done(20-02-28 01:12) @project(Inbox)
  ✔ fix broken local add watched @done(20-02-28 00:32) @project(Fixes)
  ✔ after setting an API key, change the UI to a <p>, not an <input> @done(20-02-27 00:19) @project(Fixes)
  ✔ handle API key request at launch @done(20-02-25 22:36) @project(Inbox)
  ✔ handle API key request in settings @done(20-02-24 01:36) @project(Inbox)
  ✔ Test error boundary @done(20-02-23 18:21) @project(Tests)
  ✔ Add error boundary to app @done(20-02-23 16:16) @project(Inbox)
  ✔ It correctly handles signup @done(20-02-22 18:55) @project(Tests)
  ✔ It correctly handles auth after reload (user persistence) @done(20-02-22 18:57) @project(Tests)
  ✔ remove/disable testPage @done(20-02-22 18:54) @project(Inbox)
  ✔ destroy user data when user is logged out @done(20-02-22 18:46) @project(Inbox)
  ✔ remove navbar from auth page @done(20-02-22 18:44) @project(Inbox)
  ✔ remove redundant Auth comp, convert Start page to Auth page @done(20-02-22 18:04) @project(Inbox)
  ✔ complete transition of Start page to actual page @done(20-02-22 18:04) @project(Inbox)
  ✔ remove redundant modal from auth page @done(20-02-22 18:04) @project(Inbox)
  ✔ set 2-way binding for auth form fields @done(20-02-22 18:03) @project(Inbox)
  ✔ It correctly handles login @done(20-02-22 16:52) @project(Tests)
  ✔ It correctly handles signout @done(20-02-22 16:52) @project(Tests)
